plugins {
    id 'net.minecraftforge.gradle'
    id 'org.spongepowered.mixin'
    id 'org.parchmentmc.librarian.forgegradle'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

//ext {
//    thisId = "chiseled-me-2"
//}
String thisId = "chiseled-me-2"

mixin {
    add(sourceSets.main, "${thisId}.refmap.json")

    config("${thisId}.mixins.json")
}
evaluationDependsOn(':mira')

minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${parchment_minecraft}"
//    mappings channel: 'official', version: "${minecraft_version}"
    copyIdeResources = true

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${thisId.replace("-", "_")}" {
                    source sourceSets.main
                }
            }
            args '--mixin', 'mira.mixins.json'
            mods.addAll(project(':mira').minecraft.runs.client.mods)
        }
        data {
            workingDirectory project.file('run-data')
            args '--mod', "${thisId}", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--nogui'

            mods {
                "${thisId.replace("-", "_")}" {
                    source sourceSets.main
                }
            }
            args '--mixin', 'mira.mixins.json'
            mods.addAll(project(':mira').minecraft.runs.server.mods)
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation fg.deobf(project(':mira'))
    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")
}

jar {
    finalizedBy('reobfJar')
    manifest.attributes([
            "MixinConfigs": "${thisId}.mixins.json"
    ])
}
